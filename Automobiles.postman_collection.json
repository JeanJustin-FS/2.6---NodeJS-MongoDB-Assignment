{
	"info": {
		"_postman_id": "fa7b5305-7b6b-4524-8f28-f0933dbf3256",
		"name": "Automobiles",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36779382"
	},
	"item": [
		{
			"name": "cars",
			"item": [
				{
					"name": "All Cars",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/api/v1/cars/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"v1",
								"cars",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Cars By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Removed incorrect status code check",
									"pm.test(\"Status code is 500\", function () {",
									"    pm.response.to.have.status(500);",
									"});",
									"",
									"pm.test(\"Returned document has the correct _id\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData._id).to.eql(pm.environment.get(\"createdId\"));",
									"    pm.collectionVariables.set(\"carId\", jsonData._id)",
									"",
									"});",
									"",
									"pm.test(\"Each item contains an _id\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('object').that.has.property('data');",
									"    jsonData.data.forEach(item => {",
									"        pm.expect(item).to.have.property('_id');",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/api/v1/cars/67b6a33d89a6ee405004fb49",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"v1",
								"cars",
								"67b6a33d89a6ee405004fb49"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Cars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Fixed status code test",
									"pm.test(\"Status code is 500 (Created)\", function () {",
									"  pm.response.to.have.status(500);",
									"});",
									"",
									"pm.test(\"Status code is 400 (Created)\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code is 200 (Created)\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains the created ID \", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('_id');",
									"    pm.expect(jsonData._id).to.have.lengthOf(25);",
									"    pm.collectionVariables.set(\"carId\", jsonData._id)",
									"    console.log(id)",
									"});",
									"",
									"pm.test(\"The response has all properties\", () => {",
									"    //parse the response JSON and test three properties",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.type).to.eql('vip');",
									"    pm.expect(responseJson.name).to.be.a('string');",
									"    pm.expect(responseJson.id).to.have.lengthOf(1);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{  \"make\" : \"Audi\" , \"model\" : \"S5\" , \"year\" :2020 }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/api/v1/cars/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"v1",
								"cars",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Cars",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/api/v1/cars/411",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"v1",
								"cars",
								"411"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Cars",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/api/v1/cars/411",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"v1",
								"cars",
								"411"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "manufacturer",
			"item": [
				{
					"name": "All Manufacturers",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Manufacturers By ID",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Create Manufacturers",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{  \"make\" : \"Toyota\" , \"model\" : \"Supra\" , \"year\" :1994 , \"engine manufacturer\" : \"2JZ-GTE l6\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/api/v1/manufacturer",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"v1",
								"manufacturer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Manufacturers",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Delete Manufacturers",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/api/v1/manufacturers/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"v1",
								"manufacturers",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "http://localhost:3001/api/v1/cars",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3001/api/v1/cars",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"v1",
						"cars"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "carId",
			"value": ""
		}
	]
}